//2023/05/18
int main()
{
	for(;;)//1. for循环的初始化、洞整、判断 都可以省略,但是for循环的判断部分 如果被省略，那判断条件就是: 恒为真.
	{
		printf("hehe");
	}


	int i=0;
	int j=0;
	for(;i<10;i++)
	{
		for(;j<10;j++)
		{
			printf("hehe");
		}
	}
	
	int i=0;
	int k=0;
	for(i=0,k=0;k=0;i++,k++)//如果赋的值是0就为false (恒为假),如果赋的值是非0的数字则为true (恒为真)
		k++;

	int i=0;
	int n=0;
	int ret=1;
	int sum=0;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		ret=ret*i;
		sum=sum+ret;
	}//n的阶乘
	printf("ret=%d",ret);

	printf("sum=%d",sum);//求和


	for(n=1;n<=10;n++)
	{
		//ret=1;
		for(i=1;i<=n;i++)//错误示范：每次i都被赋值为1了，要么去掉i=1，要么在第二个for语句前添加ret重置为1的语句
		{
			ret=ret*i;
			
		}
		sum=sum+ret;
	}
	printf("ret=%d\n",ret);

	//数组题,直接法
	int arr[]={1,2,3,4,5,6,7,8,9,10};
	int k=7;
	int i=0;
	int sz=sizeof(arr)/sizeof(arr[0]);//计算数组中的元素个数：个数=数组总大小/每个元素的大小
	for(i=0;i<sz;i++)
	{
		if(k==arr[i])
		{
			printf("找到了，下标是：%d\n",i);
			break;
		}
	}
	if(i==sz)
		printf("找不到\n");
	
	//二分法，折半法
	int arr[]={1,2,3,4,5,6,7,8,9,10};
	int k=3;
	int sz=sizeof(arr)/sizeof(arr[0]);
	int left=0;//左下标
	int right=sz-1;//右下标
	while(left<=right)
	{
		int mid=(left+right)/2;
        if(arr[mid]>k)
		{
		    right=mid-1;
		}
	    else if(arr[mid]<k)
	    {
		     left=mid+1;
	    }
	    else
	    {
		     printf("找到了，下标是:%d",mid);
		     break;
	    }
	    if(left>right)
	    {
		     printf("找不到\n");
	    }
	}

	return 0;
}
练习
1.计算 n的阶乘
2.计算 1!+2!+3!+.....+10!
3,在一个有序数组中查找具体的某个数字n。编写int binsearch(int x,intl,int n) 功能:在v[0]<=v[1]<=v[2]<= ....<=v[n-1]的数组中查找x.
4.编写代码，演示多个字符从两端移动，向中间汇聚。
5.编写代码实现，模拟用户登录情景，并且只能登录三次。( 只允许输入三次密码，如果密码正确则提示登录成，如果元次均输入错误，则退出程序。
