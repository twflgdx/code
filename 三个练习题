//2023/05/24
int main()
{
	int i=0;
	int count=0;
	for(i=1;i<=100;i++)//寻找1-100中有多少个9：  9 19 29......99-10个    90 91 92 93 .....99-10个,一共二十个9
	{
		if(i%10==9)
			count++;
		if(i/10==9)
			count++;
	}
	printf("%d",count);
	return 0;
}

int main()//分数求和：计算1/1-1/2+1/3-1/4+1/5...+1/99-1/100的值，打印出结果
{
	int i=0;
	double sum=0.0;
	int flag=1;
	for(i=1;i<=100;i++)
	{
		sum+=flag*1.0/i;
		flag=-flag;
	}
	printf("%lf",sum);
	return 0;
}

int main()//求10个整数中最大值
{
	int arr[]={1,2,3,4,5,6,7,8,9,10};
	/*int max=0;
	max赋值为0是存在一定问题的：如若arr中max的值大于arr中的任何一个值，那么打印的将是max的初始值*/
	int max=arr[0];
	int i=0;
	int sz=sizeof(arr)/sizeof(arr[0]);
	for(i=0;i<sz;i++)
	{
		if(arr[i]>max)
		{
			max=arr[i];
		}
	}
	printf("%d",max);
	return 0;
}


int main()//在屏幕上输出9*9乘法口诀表
{
	int i=0;
	for(i=1;i<=9;i++)//打印9行
	{
		int j=0;
		for(j=1;j<=i;j++)
		{
			printf("%d*%d=%-2d ",i,j,i*j);//重点是%-2d，可以使对齐
		}
		printf("\n");
	}
	return 0;
}
